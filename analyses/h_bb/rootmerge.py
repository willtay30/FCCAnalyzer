import uproot
import subprocess
import os
import json
import ROOT

#####
# Warning!
# Run using python, source with jsetup.sh (ROOT)

# This script takes individual root files (generated by h_bb.py for example) and merges into 1 root file for easier processing
# Please check that all inputs are correct before using
####
flavour = "S" #1 letter uppercase

path = f"/home/submit/aniketkg/FCCAnalyzer/output/h{flavour}{flavour}_tagging/histmaker/" # Location of individual root files (change to your own)!!!
inputDir = "/ceph/submit/data/group/fcc/ee/generation/DelphesEvents/winter2023/IDEA/" # data folder
# get list of root files generated by hbb
dir_list = os.listdir(path)

norm = True #normalize
lumi = 7200000 #luminosity

def get_datadicts(campaign="winter2023"):
    basedirs = {}
    basedirs['other'] = "/ceph/submit/data/group/fcc/ee/generation/DelphesEvents"

    
    basedir = basedirs['other']

    catalog = f'{basedir}/{campaign}/IDEA/samplesDict.json'
    f = open(catalog)
    datadict = json.load(f)
    datadict['basePath'] = os.path.dirname(catalog)
    return datadict

datadict = get_datadicts()

#creates output root file
output_file = f"analyses/h_bb/end_of_h_{flavour}{flavour}.root"
fOut = ROOT.TFile(output_file, "RECREATE")
fOut.Close()

for s in dir_list: #for each output file
    sfull = path + s
    strip = s.removesuffix(".root")
    histsToWrite = {}
    weight = 0
    ep = 0
    
    file = ROOT.TFile(sfull)
    
    a = file.GetListOfKeys()
    
    xsec = datadict[strip]['crossSection']
    
    for h in a: # for each item in root file
        
        event = file.Get(h.GetName())
        
        if event.Class_Name() == "TH1D" or event.Class_Name() == "TGraph": #if histogram, add to list
            
            hist = event
            hName = event.GetName()
            
            if hName in histsToWrite: # merge histograms in case histogram exists
                histsToWrite[hName].Add(hist)
            else:
                histsToWrite[hName] = hist
                
        # Get values
        elif event.GetName() == "sumOfWeights":
            weight = event.GetVal()
        elif event.GetName() == "eventsProcessed":
            ep = event.GetVal()
        elif event.GetName() == "intLumi":
            intlumi = event.GetVal()
        elif event.GetName() == "crossSection":
            xsec = event.GetVal()

    # Write to output rootfile 
    fOut = ROOT.TFile(output_file, "UPDATE")
    fOut.cd()
    fOut.mkdir(strip)
    fOut.cd(strip)
    for hist in histsToWrite.values(): #for histograms
        
        if norm:
            hist.Scale(xsec*lumi/weight)
        hist.Write()
    h_meta = ROOT.TH1D("meta", "", 10, 0, 1)
    h_meta.SetBinContent(1, weight)
    h_meta.SetBinContent(2, ep)
    h_meta.SetBinContent(3, xsec)
    h_meta.Write()
    fOut.cd()
    fOut.Close()
